name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string
      tag:
        description: 'Git Tag to checkout'
        required: true
        type: string

jobs:
  release:
    runs-on: macOS-15
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: 'EbrahimTahernejad/clash-rs'
          path: 'clash-rs'
          ref: ${{ github.event.inputs.tag }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin

      - name: Build XCFramework
        run: |
          cd clash-rs
          bash scripts/build_apple.sh
          zip -ry ./clashrs.xcframework.zip ./build/clashrs.xcframework
          mv ./clashrs.xcframework.zip ../

      # Generate checksum
      - name: Generate checksum
        run: |
          TEMP=$(shasum -a 256 clashrs.xcframework.zip)
          CHECKSUM=${TEMP:0:64}
          echo "FILE_CHECKSUM=${CHECKSUM}" >> $GITHUB_ENV

      # Update Package.swift in the compiled repository
      - name: Update Package.swift
        run: |
          echo "// swift-tools-version: 5.7" > Package.swift
          echo "" >> Package.swift
          echo "import PackageDescription" >> Package.swift
          echo "" >> Package.swift
          echo "let package = Package(" >> Package.swift
          echo "  name: \"clashrs\"," >> Package.swift
          echo "  platforms: [.iOS(.v15)]," >> Package.swift
          echo "  products: [" >> Package.swift
          echo "    .library(name: \"clashrs\", targets: [\"clashrs\"])" >> Package.swift
          echo "  ]," >> Package.swift
          echo "  targets: [" >> Package.swift
          echo "    .binaryTarget(" >> Package.swift
          echo "      name: \"clashrs\"," >> Package.swift
          echo "      url: \"https://github.com/EbrahimTahernejad/LibClashRsApple/releases/download/${{ github.event.inputs.version }}/clashrs.xcframework.zip\"," >> Package.swift
          echo "      checksum: \"${{ env.FILE_CHECKSUM }}\"" >> Package.swift
          echo "    )" >> Package.swift
          echo "  ]" >> Package.swift
          echo ")" >> Package.swift

      # Commit updated Package.swift to the compiled repository
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: clashrs Release ${{ github.event.inputs.version }}
          commit_user_name: Ebrahim
          commit_user_email: ebrahimtahernejad@gmail.com
          file_pattern: 'Package.swift'

      # Create GitHub Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ github.event.inputs.version }}
          body: 'Compiled from source tag: ${{ github.event.inputs.tag }}'
          files: clashrs.xcframework.zip
